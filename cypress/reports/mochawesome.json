{
  "stats": {
    "suites": 15,
    "tests": 49,
    "passes": 40,
    "pending": 0,
    "failures": 9,
    "start": "2022-10-10T09:42:21.999Z",
    "end": "2022-10-10T09:43:40.115Z",
    "duration": 78116,
    "testsRegistered": 49,
    "passPercent": 81.63265306122449,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "920c9fc6-6eee-4462-b7a1-dfb7615cbc63",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a22356a9-36d2-459a-a62e-c4b153b7bf8d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "36b53aef-66de-4b50-a522-b6248c8fd0b4",
              "parentUUID": "a22356a9-36d2-459a-a62e-c4b153b7bf8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36b53aef-66de-4b50-a522-b6248c8fd0b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 476,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "45351959-b4eb-4df5-9ca7-156e67b1e218",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "6761b6be-df12-49da-912b-2eb68e8aa483",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 385,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "e14b8955-466a-4fba-b0d1-1fbcf739a9b4",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "3a47585d-b4c8-4cea-96d2-d65f6326ff78",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "8037ad24-7442-427c-bca0-8e3cc64f6fc5",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "82a74dc5-563a-422a-83eb-e2b993f65df2",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "539c5f79-8eca-408c-8180-0770e5827329",
              "parentUUID": "5c090351-aa3f-4950-8af2-ec7ca51464e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45351959-b4eb-4df5-9ca7-156e67b1e218",
            "6761b6be-df12-49da-912b-2eb68e8aa483",
            "e14b8955-466a-4fba-b0d1-1fbcf739a9b4",
            "3a47585d-b4c8-4cea-96d2-d65f6326ff78",
            "8037ad24-7442-427c-bca0-8e3cc64f6fc5",
            "82a74dc5-563a-422a-83eb-e2b993f65df2",
            "539c5f79-8eca-408c-8180-0770e5827329"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2402,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25dd69f9-3dc6-4dcd-bd11-90f43671f315",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 251,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "f3d97ca7-3aed-4d79-864c-5a0787de7281",
              "parentUUID": "25dd69f9-3dc6-4dcd-bd11-90f43671f315",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "5cd8d3f1-0271-477b-9b6e-06997c47f9f9",
              "parentUUID": "25dd69f9-3dc6-4dcd-bd11-90f43671f315",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3d97ca7-3aed-4d79-864c-5a0787de7281",
            "5cd8d3f1-0271-477b-9b6e-06997c47f9f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a16a779b-ae24-4d96-8409-22667a06531a",
          "title": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O botão deve possuir o `id` denominado `button-random-color`",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores O botão deve possuir o `id` denominado `button-random-color`",
              "timedOut": null,
              "duration": 299,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').should('be.visible');",
              "err": {},
              "uuid": "638289ea-dbf6-40f0-9497-403475a6ba50",
              "parentUUID": "a16a779b-ae24-4d96-8409-22667a06531a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O botão deve possuir o texto `Cores aleatórias`",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores O botão deve possuir o texto `Cores aleatórias`",
              "timedOut": null,
              "duration": 237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').contains('Cores aleatórias');",
              "err": {},
              "uuid": "504e8b3f-7286-450b-b6b2-f85368f8b1d7",
              "parentUUID": "a16a779b-ae24-4d96-8409-22667a06531a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "As cores geradas na paleta são diferentes a cada click do botão.",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores As cores geradas na paleta são diferentes a cada click do botão.",
              "timedOut": null,
              "duration": 831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.get('#button-random-color').click();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "58efe319-01f3-4057-b158-6d07b19fcb3f",
              "parentUUID": "a16a779b-ae24-4d96-8409-22667a06531a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A cor preta deve ser a primeira na sua paleta de cores",
              "fullTitle": "4 - Adicione um botão para gerar cores aleatórias para a paleta de cores A cor preta deve ser a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 697,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.get('#button-random-color').click();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "6cc10d96-9385-463c-83cd-cfbc1cc2df3f",
              "parentUUID": "a16a779b-ae24-4d96-8409-22667a06531a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "638289ea-dbf6-40f0-9497-403475a6ba50",
            "504e8b3f-7286-450b-b6b2-f85368f8b1d7",
            "58efe319-01f3-4057-b158-6d07b19fcb3f",
            "6cc10d96-9385-463c-83cd-cfbc1cc2df3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2d33f6bf-9e8e-4588-893c-8b46a00a789d",
          "title": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta gerada deve ser salva no localStorage com a chave `colorPalette`",
              "fullTitle": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página A paleta gerada deve ser salva no localStorage com a chave `colorPalette`",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').click().should(function () {\n  expect(localStorage.getItem('colorPalette')).to.not.equal(null);\n});",
              "err": {},
              "uuid": "d7bf9741-4b69-498f-ae84-6a717428f82c",
              "parentUUID": "2d33f6bf-9e8e-4588-893c-8b46a00a789d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A paleta gerada deve ser mantida ao recarregar a página",
              "fullTitle": "5 - Implemente uma função usando localStorage para que a paleta de cores gerada aleatoriamente seja mantida após recarregar a página A paleta gerada deve ser mantida ao recarregar a página",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#button-random-color').click();\ncy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.reload();\n  cy.get('.color').then(function (colorsAfter) {\n    currentColors = Array.from(colorsAfter).map(function (colorAfter) {\n      return Cypress.$(colorAfter).css('background-color');\n    });\n    expect(currentColors).to.deep.equal(previousColors);\n  });\n});",
              "err": {},
              "uuid": "44b1154d-37eb-4cd9-b52e-bb530ce8e931",
              "parentUUID": "2d33f6bf-9e8e-4588-893c-8b46a00a789d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7bf9741-4b69-498f-ae84-6a717428f82c",
            "44b1154d-37eb-4cd9-b52e-bb530ce8e931"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "06b44b23-e730-452c-83b3-38ebb01ebeab",
          "title": "6 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "abe240dd-3804-480f-a6e7-29f9faf2f327",
              "parentUUID": "06b44b23-e730-452c-83b3-38ebb01ebeab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "956d8943-adb1-45b2-ae42-66ea178240b3",
              "parentUUID": "06b44b23-e730-452c-83b3-38ebb01ebeab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "897432ee-e653-44ad-bb45-9694e41941c0",
              "parentUUID": "06b44b23-e730-452c-83b3-38ebb01ebeab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "6 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "d8f42171-2e17-4f34-91c6-7138247dc0a0",
              "parentUUID": "06b44b23-e730-452c-83b3-38ebb01ebeab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "abe240dd-3804-480f-a6e7-29f9faf2f327",
            "956d8943-adb1-45b2-ae42-66ea178240b3",
            "897432ee-e653-44ad-bb45-9694e41941c0",
            "d8f42171-2e17-4f34-91c6-7138247dc0a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bfbf93a-fe95-4f6d-81fd-f3427eb7767f",
          "title": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "8c868a35-df4e-4d8b-a1ca-418a6513616b",
              "parentUUID": "8bfbf93a-fe95-4f6d-81fd-f3427eb7767f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "7 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "facdbb3f-2003-402c-a3ce-1e1e2a4351e2",
              "parentUUID": "8bfbf93a-fe95-4f6d-81fd-f3427eb7767f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c868a35-df4e-4d8b-a1ca-418a6513616b",
            "facdbb3f-2003-402c-a3ce-1e1e2a4351e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8b3d3529-fb61-4696-87d4-6dab95880949",
          "title": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "26948a68-da89-4862-942b-c0ece89de552",
              "parentUUID": "8b3d3529-fb61-4696-87d4-6dab95880949",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "8 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "faa706f9-197a-48ab-b577-ef23976a21a6",
              "parentUUID": "8b3d3529-fb61-4696-87d4-6dab95880949",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26948a68-da89-4862-942b-c0ece89de552",
            "faa706f9-197a-48ab-b577-ef23976a21a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 439,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e58de0c9-df9b-457f-b0d1-7befc607e824",
          "title": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "cc2e06c0-c81a-4ff3-a409-eeae19f9ebcc",
              "parentUUID": "e58de0c9-df9b-457f-b0d1-7befc607e824",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "9 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "41fe056d-05ec-4c2c-87d5-5c0a5011eaa2",
              "parentUUID": "e58de0c9-df9b-457f-b0d1-7befc607e824",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc2e06c0-c81a-4ff3-a409-eeae19f9ebcc",
            "41fe056d-05ec-4c2c-87d5-5c0a5011eaa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10163,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "64c9363b-97fb-4a7f-ae3c-88af8b40596a",
          "title": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "cb535971-bfea-4d00-9637-d858327edb1c",
              "parentUUID": "64c9363b-97fb-4a7f-ae3c-88af8b40596a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 9405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d88d3d29-6c3f-4281-aaf8-22339614c36b",
              "parentUUID": "64c9363b-97fb-4a7f-ae3c-88af8b40596a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "10 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 2275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "29c54766-f5f5-49ad-a15a-03701ef05604",
              "parentUUID": "64c9363b-97fb-4a7f-ae3c-88af8b40596a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb535971-bfea-4d00-9637-d858327edb1c",
            "d88d3d29-6c3f-4281-aaf8-22339614c36b",
            "29c54766-f5f5-49ad-a15a-03701ef05604"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a20d430e-b190-4127-9d21-f7b8fdeceb0b",
          "title": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "eac31d4d-2793-422a-8422-5e4e65156d8b",
              "parentUUID": "a20d430e-b190-4127-9d21-f7b8fdeceb0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "5132bd46-5566-449d-87f8-8286b669b931",
              "parentUUID": "a20d430e-b190-4127-9d21-f7b8fdeceb0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "6bc9cdf1-dff0-4621-bc5a-eab0dd3647e5",
              "parentUUID": "a20d430e-b190-4127-9d21-f7b8fdeceb0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "11 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "3f7587e4-d67e-4d12-93e7-93407872e96e",
              "parentUUID": "a20d430e-b190-4127-9d21-f7b8fdeceb0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eac31d4d-2793-422a-8422-5e4e65156d8b",
            "5132bd46-5566-449d-87f8-8286b669b931",
            "6bc9cdf1-dff0-4621-bc5a-eab0dd3647e5",
            "3f7587e4-d67e-4d12-93e7-93407872e96e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3581,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe953999-1550-439c-a96c-e1bb26640b42",
          "title": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Os pixels pintados devem ser salvos no localStorage com a chave `pixelBoard`",
              "fullTitle": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage Os pixels pintados devem ser salvos no localStorage com a chave `pixelBoard`",
              "timedOut": null,
              "duration": 438,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel:first').click().then(function () {\n  var pixelboard = localStorage.getItem('pixelBoard');\n  expect(pixelboard).to.not.equal(null);\n});",
              "err": {},
              "uuid": "44a9d405-2e3c-4cc9-95a0-a92d28c75e7f",
              "parentUUID": "fe953999-1550-439c-a96c-e1bb26640b42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O quadro deve ser preenchido com as mesmas cores utilizadas anteriormente, nas posições corretas ao recarregar a página",
              "fullTitle": "12 - Crie uma função para salvar e recuperar o seu desenho atual no localStorage O quadro deve ser preenchido com as mesmas cores utilizadas anteriormente, nas posições corretas ao recarregar a página",
              "timedOut": null,
              "duration": 1278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color, index) {\n  if (index === 2) {\n    cy.wrap(color).click();\n    var backgroundColor = color.css('background-color');\n    var clickedPixelsIndex = [2, 7, 10, 11, 12, 13, 14, 17, 22];\n    cy.get('.pixel').each(function (pixel, index) {\n      clickedPixelsIndex.forEach(function (pixelIndex) {\n        if (index === pixelIndex) cy.wrap(pixel).click();\n      });\n    });\n    cy.reload();\n    cy.get('.pixel').each(function (pixel, index) {\n      clickedPixelsIndex.forEach(function (pixelIndex) {\n        if (index === pixelIndex) cy.wrap(pixel).should('have.css', 'background-color', backgroundColor);\n      });\n    });\n  }\n});",
              "err": {},
              "uuid": "217c1d2b-1fd5-409c-ba8a-d0c26769e512",
              "parentUUID": "fe953999-1550-439c-a96c-e1bb26640b42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44a9d405-2e3c-4cc9-95a0-a92d28c75e7f",
            "217c1d2b-1fd5-409c-ba8a-d0c26769e512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9372d826-ccaa-4ba6-a039-5fec21d54481",
          "title": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 246,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "09361258-77a7-4e18-97be-b528dd2f9861",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 295,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "7f3c5506-088a-409e-99f8-c6f60c80b821",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "23bfbfb9-742e-4c11-95a9-e9d3c59eb485",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "5e5a3ac5-7ec3-48eb-9a12-671c8b7d826c",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 302,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "e7de88f3-f9c3-47ce-b076-d8bd16072eb2",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4393,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: expected '<button#generate-board>' to be on the right of { Object (0, length, ...) }",
                "estack": "CypressError: Timed out retrying: expected '<button#generate-board>' to be on the right of { Object (0, length, ...) }\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6a90d8bd-1f28-4bc9-8d09-33c0309f9d51",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 637,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:44951/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44951/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44951/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44951/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44951/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44951/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44951/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4d0f3a2f-ed53-45f2-bfe9-e3d7640669da",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4992,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d72f0431-080f-4fff-b4d4-2dae5fef1aa5",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "13 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4881,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fb0c79fa-c463-493e-95d8-7474707af250",
              "parentUUID": "9372d826-ccaa-4ba6-a039-5fec21d54481",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09361258-77a7-4e18-97be-b528dd2f9861",
            "7f3c5506-088a-409e-99f8-c6f60c80b821",
            "5e5a3ac5-7ec3-48eb-9a12-671c8b7d826c",
            "e7de88f3-f9c3-47ce-b076-d8bd16072eb2"
          ],
          "failures": [
            "23bfbfb9-742e-4c11-95a9-e9d3c59eb485",
            "6a90d8bd-1f28-4bc9-8d09-33c0309f9d51",
            "4d0f3a2f-ed53-45f2-bfe9-e3d7640669da",
            "d72f0431-080f-4fff-b4d4-2dae5fef1aa5",
            "fb0c79fa-c463-493e-95d8-7474707af250"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20528,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e3cfae6e-b140-4264-ab2f-a43bbf961140",
          "title": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4963,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7a136c8f-7c60-45a8-bc27-eb097f1cf7cc",
              "parentUUID": "e3cfae6e-b140-4264-ab2f-a43bbf961140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 750,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "cd133ba0-7c66-4efa-bd4d-b55c0cefb1b9",
              "parentUUID": "e3cfae6e-b140-4264-ab2f-a43bbf961140",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "14 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "7cf49ab7-5e49-474b-8fa3-343c2880ce4d",
              "parentUUID": "e3cfae6e-b140-4264-ab2f-a43bbf961140",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd133ba0-7c66-4efa-bd4d-b55c0cefb1b9"
          ],
          "failures": [
            "7a136c8f-7c60-45a8-bc27-eb097f1cf7cc",
            "7cf49ab7-5e49-474b-8fa3-343c2880ce4d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3480e6f8-05b8-44b0-a1d0-53a8097151ca",
          "title": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "O tamanho do board gerado deve ser salvo no localStorage com a chave `boardSize`",
              "fullTitle": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página O tamanho do board gerado deve ser salvo no localStorage com a chave `boardSize`",
              "timedOut": null,
              "duration": 1010,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.reload().then(function () {\n  var boardSize = JSON.parse(localStorage.getItem('boardSize'));\n  expect(boardSize).to.not.equal(null);\n});",
              "err": {
                "message": "AssertionError: expected null to not equal null",
                "estack": "AssertionError: expected null to not equal null\n    at getRet (http://localhost:44951/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:44951/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:44951/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:44951/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:44951/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:44951/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:44951/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "fe1b0ae6-7448-4386-baf3-30b81d40b349",
              "parentUUID": "3480e6f8-05b8-44b0-a1d0-53a8097151ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O quadro deve ter o mesmo tamanho gerado ao recarregar a página.",
              "fullTitle": "15 - Crie uma função para manter o tamanho novo do board ao recarregar a página O quadro deve ter o mesmo tamanho gerado ao recarregar a página.",
              "timedOut": null,
              "duration": 4843,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.reload();\ncy.get('.pixel').should('have.length', 36);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:44951/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:44951/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:44951/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:44951/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:44951/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:44951/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:44951/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:44951/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:44951/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:44951/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:44951/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f7f8007a-3f7a-4f23-b173-57b5740653d4",
              "parentUUID": "3480e6f8-05b8-44b0-a1d0-53a8097151ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fe1b0ae6-7448-4386-baf3-30b81d40b349",
            "f7f8007a-3f7a-4f23-b173-57b5740653d4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5853,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}